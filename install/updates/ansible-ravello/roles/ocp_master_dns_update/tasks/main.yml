---
- name: replace master public url
  replace: 
    dest: "{{ master_config }}"
    regexp: "masterPublicURL: {{ original.master_url }}"
    replace: "masterPublicURL: {{ new.master_url }}"
    
- name: replace public url
  lineinfile: 
    dest: "{{ master_config }}"
    regexp: '  publicURL: '
    line: '  publicURL: {{ new.master_url }}:8443/console/'
    
- name: asset public url
  lineinfile: 
    dest: "{{ master_config }}"
    regexp: '  assetPublicURL: '
    line: '  assetPublicURL: {{ new.master_url }}:8443/console/'   
    
- name: logging public url
  lineinfile: 
    dest: "{{ master_config }}"
    regexp: '  loggingPublicURL: '
    line: '  loggingPublicURL: {{ new.logging_url }}'  
  tags:
    - logging    
    
- name: metrics public url
  lineinfile: 
    dest: "{{ master_config }}"
    regexp: '  metricsPublicURL: '
    line: '  metricsPublicURL: {{ new.metrics_url }}'    
  tags:
    - metrics
               
- name: replace subdomain
  lineinfile: 
    dest: "{{ master_config }}"
    insertafter: '^routingConfig:'
    regexp: ' subdomain: '
    line: '  subdomain: {{ new_wildcard_fqdn }}' 
    
- name: replace corsAllowedOrigins
  lineinfile:
    dest: "{{ master_config }}"
    insertafter: "^corsAllowedOrigins:"
    line: '  - {{ app_name.master }}.{{ subdomain }}.{{ domain }}' 
  
- name: switch to correct context
  command: "oc config use-context {{ default_context }}"
  
- name: switch to project openshift-infra
  command: "oc project openshift-infra"        
  tags:
    - metrics

#- name: update hawkular metrics route
#  command: oc patch route hawkular-metrics -p '{"spec":{"host":"{{ app_name.metrics }}.{{ new_wildcard_fqdn }}"}}"'
#  tags:
#    - metrics

- name: delete hawkular metrics route
  command: oc delete route hawkular-metrics
  tags:
    - metrics
    
# can't just delete and add anymore
#- name: create hawkular metrics route
#  command: oc expose service hawkular-metrics --hostname={{ app_name.metrics }}.{{ new_wildcard_fqdn }}
#  tags:
#    - metrics

# it should be reencrypt, but don't have the certificates at hand, generated by deployer pod
# so passthrough is used.  edge won't work
- name: create hawkular metrics route
  command: oc create route passthrough --service=hawkular-metrics --hostname={{ app_name.metrics }}.{{ new_wildcard_fqdn }}
  tags:
    - metrics
        
- name: switch to logging project
  command: "oc project logging"       
  tags:
    - logging
    
- name: delete kibana logging route
  command: oc delete route logging-kibana
  tags:
    - logging
    
- name: create kibana logging route
  command: oc create route passthrough --service=logging-kibana --hostname={{ app_name.kibana }}.{{ new_wildcard_fqdn }}
  tags:
    - logging

- name: update kibaba-proxy oauth redirects
  command: oc patch oauthclient kibana-proxy -p '{"redirectURIs":["https://{{ app_name.kibana }}.{{ new_wildcard_fqdn }}","https://kibana-ops.example.com"]}'
  tags:
    - logging

- name: extract dc logging-kibana to yaml
  shell: oc get dc/logging-kibana -o yaml > /root/dc-logging-kibana.yml
  tags:
    - logging

- name: edit dc logging-kibana yaml
  replace:
    dest: /root/dc-logging-kibana.yml
    regexp: '{{ old_master_app_name }}.{{ old_subdomain }}.{{ old_domain }}'
    replace: '{{ app_name.master }}.{{ subdomain }}.{{ domain }}'
  tags:
    - logging

- name: replace dc logging kibana with yaml
  shell: "cat /root/dc-logging-kibana.yml | oc replace -f -"
  tags:
    - logging 
  
# need to restart because of some issue with atomic and possibly with hostname, other nodes recover    
- name: restart atomic openshift
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - atomic-openshift-master
    - atomic-openshift-node
  tags:
    - update_dns

#  handlers:
#    - name: restart atomic-openshift-master
#      service:
#        name: atomic-openshift-master
#        state: restarted    